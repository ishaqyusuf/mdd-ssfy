model InventoryCategory {
    id    Int     @id @default(autoincrement())
    title String
    img   String?
    uid   String
    type  String?

    inventories                        Inventory[]
    // for shelf item
    shelfItemSubCategories             InventorySubCategory[]
    // for components
    inventoryItemSubCategories         InventoryItemSubCategory[]
    categoryVariantAttributes          InventoryCategoryVariantAttribute[] @relation(name: "inventoryCategory")
    attributedCategoryVariantAttribute InventoryCategoryVariantAttribute[] @relation(name: "valuesInventoryCategory")

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)
}

model Inventory {
    id   Int     @id @default(autoincrement())
    name String
    img  String?
    uid  String

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventoryCategory   InventoryCategory? @relation(fields: [inventoryCategoryId], references: [id])
    inventoryCategoryId Int

    inventoryItemSubCategories InventoryItemSubCategory[]
    variants                   InventoryVariant[]

    pricings          InventoryVariantPricing[]
    variantAtrributes InventoryVariantAttribute[]
    logs              InventoryLog[]

    @@index([inventoryCategoryId])
}

model InventoryVariant {
    id  Int     @id @default(autoincrement())
    img String?
    sku String?
    uid String

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventory   Inventory @relation(fields: [inventoryId], references: [id])
    inventoryId Int

    pricings   InventoryVariantPricing[]
    attributes InventoryVariantAttribute[]
    stocks     InventoryStock[]
    logs       InventoryLog[]

    @@index([inventoryId])
}

model InventoryVariantAttribute {
    id Int @id @default(autoincrement())

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventoryVariant   InventoryVariant? @relation(fields: [inventoryVariantId], references: [id])
    inventoryVariantId Int?

    //
    inventoryCategoryVariantAttribute   InventoryCategoryVariantAttribute? @relation(fields: [inventoryCategoryVariantAttributeId], references: [id])
    inventoryCategoryVariantAttributeId Int?

    value   Inventory? @relation(fields: [valueId], references: [id])
    valueId Int?

    @@index([valueId])
    @@index([inventoryVariantId])
    @@index([inventoryCategoryVariantAttributeId])
}

model InventoryCategoryVariantAttribute {
    id Int @id @default(autoincrement())

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventoryCategory   InventoryCategory @relation(name: "inventoryCategory", fields: [inventoryCategoryId], references: [id])
    inventoryCategoryId Int

    valuesInventoryCategory   InventoryCategory @relation(name: "valuesInventoryCategory", fields: [valuesInventoryCategoryId], references: [id])
    valuesInventoryCategoryId Int

    variantAttributes InventoryVariantAttribute[]

    @@unique([inventoryCategoryId, valuesInventoryCategoryId])
    @@index([inventoryCategoryId])
    @@index([valuesInventoryCategoryId])
}

model InventoryVariantPricing {
    id    Int   @id @default(autoincrement())
    price Float

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventoryVariant   InventoryVariant? @relation(fields: [inventoryVariantId], references: [id])
    inventoryVariantId Int?

    inventory   Inventory? @relation(fields: [inventoryId], references: [id])
    inventoryId Int?

    @@index([inventoryVariantId])
    @@index([inventoryId])
}

// example: 
model InventoryItemSubCategory {
    id Int @id @default(autoincrement())

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventory   Inventory @relation(fields: [inventoryId], references: [id])
    inventoryId Int

    // for components steps
    values                    InventoryItemSubCategoryValues[]
    valuesInventoryCategory   InventoryCategory?               @relation(fields: [valuesInventoryCategoryId], references: [id])
    valuesInventoryCategoryId Int?

    // for shelf items
    inventorySubCategory   InventorySubCategory? @relation(fields: [inventorySubCategoryId], references: [id])
    inventorySubCategoryId Int?

    @@index([inventoryId])
    @@index([inventorySubCategoryId])
    @@index([valuesInventoryCategoryId])
}

// for step components
model InventoryItemSubCategoryValues {
    id Int @id @default(autoincrement())

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventoryItemSubCategory   InventoryItemSubCategory? @relation(fields: [inventoryItemSubCategoryId], references: [id])
    inventoryItemSubCategoryId Int?
    // @@index([inventoryCategoryId])

    @@index([inventoryItemSubCategoryId])
}

// use only for shelf items.
//example: 
// shelf item category: Jambs
// sub categories: exterior single rabbet jambs,
// select Jambs in shelf items, it loads inventorysubcategories where parentSubCatuid is null,
// select next category, it loads categories where parentUid is prev, if no categories in next, it loads products in the selected categories...
model InventorySubCategory {
    id                   Int     @id @default(autoincrement())
    title                String?
    uid                  String
    parentSubCategoryUid String?

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    parentInventoryCategory   InventoryCategory @relation(fields: [parentInventoryCategoryId], references: [id])
    parentInventoryCategoryId Int

    inventoryItemSubCategories InventoryItemSubCategory[]

    @@index([parentInventoryCategoryId])
}

model InventoryStock {
    id                 Int              @id @default(autoincrement())
    inventoryVariantId Int
    inventoryVariant   InventoryVariant @relation(fields: [inventoryVariantId], references: [id])

    quantity   Float
    location   String?
    supplierId Int?
    supplier   Supplier? @relation(fields: [supplierId], references: [id])

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    @@index([inventoryVariantId])
    @@index([supplierId])
}

model Supplier {
    id       Int              @id @default(autoincrement())
    name     String
    email    String?
    phone    String?
    address  String?
    supplies InventoryStock[]

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)
}

model InventoryLog {
    id                 Int              @id @default(autoincrement())
    action             String
    quantity           Float
    notes              String?
    inventoryVariantId Int
    inventoryVariant   InventoryVariant @relation(fields: [inventoryVariantId], references: [id])
    createdBy          String?

    createdAt   DateTime?  @default(now()) @db.Timestamp(0)
    updatedAt   DateTime?  @updatedAt
    deletedAt   DateTime?  @db.Timestamp(0)
    Inventory   Inventory? @relation(fields: [inventoryId], references: [id])
    inventoryId Int?

    @@index([inventoryVariantId])
    @@index([inventoryId])
}
