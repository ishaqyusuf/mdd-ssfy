model ExInventoryCategory {
    id    Int     @id @default(autoincrement())
    title String
    img   String?
    uid   String
    type  String?

    inventories                        ExInventory[]
    // for shelf item
    shelfItemSubCategories             ExInventorySubCategory[]
    // for components
    inventoryItemSubCategories         ExInventoryItemSubCategory[]
    categoryVariantAttributes          ExInventoryCategoryVariantAttribute[] @relation(name: "inventoryCategory")
    attributedCategoryVariantAttribute ExInventoryCategoryVariantAttribute[] @relation(name: "valuesInventoryCategory")

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)
}

model ExInventory {
    id   Int     @id @default(autoincrement())
    name String
    img  String?
    uid  String

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventoryCategory   ExInventoryCategory? @relation(fields: [inventoryCategoryId], references: [id])
    inventoryCategoryId Int

    inventoryItemSubCategories ExInventoryItemSubCategory[]
    variants                   ExInventoryVariant[]

    pricings          ExInventoryVariantPricing[]
    variantAtrributes ExInventoryVariantAttribute[]

    @@index([inventoryCategoryId])
}

model ExInventoryVariant {
    id  Int     @id @default(autoincrement())
    img String?
    sku String?
    uid String

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventory   ExInventory @relation(fields: [inventoryId], references: [id])
    inventoryId Int

    pricings   ExInventoryVariantPricing[]
    attributes ExInventoryVariantAttribute[]

    @@index([inventoryId])
}

model ExInventoryVariantAttribute {
    id Int @id @default(autoincrement())

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventoryVariant   ExInventoryVariant? @relation(fields: [inventoryVariantId], references: [id])
    inventoryVariantId Int?

    //
    inventoryCategoryVariantAttribute   ExInventoryCategoryVariantAttribute? @relation(fields: [inventoryCategoryVariantAttributeId], references: [id])
    inventoryCategoryVariantAttributeId Int?

    value   ExInventory? @relation(fields: [valueId], references: [id])
    valueId Int?

    @@index([valueId])
    @@index([inventoryVariantId])
    @@index([inventoryCategoryVariantAttributeId])
}

model ExInventoryCategoryVariantAttribute {
    id Int @id @default(autoincrement())

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventoryCategory   ExInventoryCategory @relation(name: "inventoryCategory", fields: [inventoryCategoryId], references: [id])
    inventoryCategoryId Int

    valuesInventoryCategory   ExInventoryCategory @relation(name: "valuesInventoryCategory", fields: [valuesInventoryCategoryId], references: [id])
    valuesInventoryCategoryId Int

    variantAttributes ExInventoryVariantAttribute[]

    @@unique([inventoryCategoryId, valuesInventoryCategoryId])
    @@index([inventoryCategoryId])
    @@index([valuesInventoryCategoryId])
}

model ExInventoryVariantPricing {
    id    Int   @id @default(autoincrement())
    price Float

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventoryVariant   ExInventoryVariant? @relation(fields: [inventoryVariantId], references: [id])
    inventoryVariantId Int?

    inventory   ExInventory? @relation(fields: [inventoryId], references: [id])
    inventoryId Int?

    @@index([inventoryVariantId])
    @@index([inventoryId])
}

// example: 
model ExInventoryItemSubCategory {
    id Int @id @default(autoincrement())

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventory   ExInventory @relation(fields: [inventoryId], references: [id])
    inventoryId Int

    // for components steps
    values                    ExInventoryItemSubCategoryValues[]
    valuesInventoryCategory   ExInventoryCategory?               @relation(fields: [valuesInventoryCategoryId], references: [id])
    valuesInventoryCategoryId Int?

    // for shelf items
    inventorySubCategory   ExInventorySubCategory? @relation(fields: [inventorySubCategoryId], references: [id])
    inventorySubCategoryId Int?

    @@index([inventoryId])
    @@index([inventorySubCategoryId])
    @@index([valuesInventoryCategoryId])
}

// for step components
model ExInventoryItemSubCategoryValues {
    id Int @id @default(autoincrement())

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    inventoryItemSubCategory   ExInventoryItemSubCategory? @relation(fields: [inventoryItemSubCategoryId], references: [id])
    inventoryItemSubCategoryId Int?
    // @@index([inventoryCategoryId])

    @@index([inventoryItemSubCategoryId])
}

// use only for shelf items.
//example: 
// shelf item category: Jambs
// sub categories: exterior single rabbet jambs,
// select Jambs in shelf items, it loads inventorysubcategories where parentSubCatuid is null,
// select next category, it loads categories where parentUid is prev, if no categories in next, it loads products in the selected categories...
model ExInventorySubCategory {
    id                   Int     @id @default(autoincrement())
    title                String?
    uid                  String
    parentSubCategoryUid String?

    createdAt DateTime? @default(now()) @db.Timestamp(0)
    updatedAt DateTime? @updatedAt
    deletedAt DateTime? @db.Timestamp(0)

    parentInventoryCategory   ExInventoryCategory @relation(fields: [parentInventoryCategoryId], references: [id])
    parentInventoryCategoryId Int

    inventoryItemSubCategories ExInventoryItemSubCategory[]

    @@index([parentInventoryCategoryId])
}
