import {
    AlertTriangle,
    ArrowRight,
    Check,
    ChevronLeft,
    ChevronRight,
    ClipboardCheck,
    Copy,
    CreditCard,
    File,
    FileText,
    HelpCircle,
    Image as media,
    Laptop, 
    Loader2,
    LucideProps,
    Moon,
    MoreVertical,
    Pizza,
    Plus,
    Settings,
    SunMedium,
    Trash,
    Twitter,
    User,
    X,
    type LucideIcon,
    EyeOff,
    Eye,
    Menu,
    Pencil,
    BadgeDollarSign,
    ClipboardEdit,
    ShoppingBag,
    Banknote,
    Package,
    Construction,
    ArrowLeft,
    BookOpen,
    Printer,
    Save,
    FolderClosed,
    MoreVerticalIcon,
    Settings2,
    LayoutDashboard,
    Cog,
    FolderGit2,
    Home,
    NewspaperIcon,
    Pin,
    Cpu,
    ClipboardList,
    LayoutTemplate,
    Briefcase,
    Truck,
    PackageOpen,
    Merge,
    Percent,
    Delete,
    Mail,
    Layers,
    Eraser,
    ArrowUp,
    ArrowDown,
    Move,
    Rocket,
    Phone,
    MapPin,
    Info,
    Timer,
    Receipt,
    Calendar,
    ChevronDown,
    ChevronUp,
    DollarSign,
    ImageIcon,
    Send,
    LineChart,
    Box,
    Download,
    MoreHorizontal,
    Search,
    Filter,
    TrendingUp,
    TrendingDown,
    AlertCircle,
    UserCircle,
    ShieldIcon,
    TimerIcon,
    Users,
    Flag,
} from "lucide-react";
import Image from "next/image";
 
import Link from "next/link";
import { Cross2Icon } from "@radix-ui/react-icons";
 
import { cva, VariantProps } from "class-variance-authority";

export type Icon = LucideIcon;

export const Icons = {
    profile: UserCircle,
    box: Box,
    roles: ShieldIcon,
    Filter: Filter,
    Menu: MoreHorizontal,
    pdf: File,
    Search: Search,
    Export: Download,
    placeholder: ImageIcon,
    reciept: Receipt,
    X: Cross2Icon,
    calendar: Calendar,
    dollarSign: DollarSign,
    TrendingUp: TrendingUp,
    TrendingDown: TrendingDown,
    Notification: AlertCircle,
    
    time: Timer,
    cart: ShoppingBag,
     
     
   
    delivery2: Send,
    pickup: Package,
    Merge: Merge,
    Warn: Info,
    Rocket: Rocket,
    Delete: Delete,
    orders: ShoppingBag,
    project: FolderGit2,
    phone: Phone,
    address: MapPin,
    units: Home,
    tasks: Pin,
    payment: CreditCard,
    pendingPayment: TimerIcon,
    punchout: Cpu,
    hrm: LayoutTemplate,
    communitySettings: LayoutTemplate,
    component: Layers,
    clear: Eraser,
    Email: Mail,
    jobs: Briefcase,
    dealer: Briefcase,
    customerService: ClipboardList,
    communityInvoice: NewspaperIcon,
    dashboard: LayoutDashboard,
    salesSettings: Cog,
    save: Save,
    saveAndClose: FolderClosed,
    estimates: Banknote,
    packingList: Package,
    production: Construction,
    open: BookOpen,
    close: X,
    print: Printer,
    menu: Menu,
    spinner: Loader2,
    chevronLeft: ChevronLeft,
    chevronRight: ChevronRight,
    chevronDown: ChevronDown,
    chevronUp: ChevronUp,
    trash: Trash,
    post: FileText,
    page: File,
    percent: Percent,
    media,
    more: MoreVerticalIcon,
    settings: Settings,
    settings2: Settings2,
    billing: CreditCard,
    products: PackageOpen,
    ellipsis: MoreVertical,
    add: Plus,
    dollar: BadgeDollarSign,
    inbound: Package,
    warning: AlertTriangle,
    employees: Users,
    user: User,
    arrowRight: ArrowRight,
    arrowLeft: ArrowLeft,
    arrowUp: ArrowUp,
    arrowDown: ArrowDown,
    move2: Move,
    help: HelpCircle,
    pizza: Pizza,
    delivery: Truck,
    twitter: Twitter,
    check: Check,
    copy: Copy,
    copyDone: ClipboardCheck,
    sun: SunMedium,
    moon: Moon,
    laptop: Laptop,
    lineChart: LineChart,
    hide: EyeOff,
    view: Eye,
    flag:Flag,
    edit: ClipboardEdit,
     
};

export type IconKeys = keyof typeof Icons;
const iconVariants = cva("", {
    variants: {
        variant: {
            primary: "text-primary",
            muted: "text-muted-foreground",
            destructive: "text-red-600",
        },
        size: {
            sm: "size-4",
            default: "",
        },
    },
    defaultVariants: {
        size: "default",
        variant: "muted",
    },
});
export function Icon({
    name,
    className,
    ...props
}: { name: IconKeys; className? } & VariantProps<typeof iconVariants>) {
    const RenderIcon = Icons[name];
    if (!RenderIcon) return null;
    return <RenderIcon className={cn("", iconVariants(props), className)} />;
}
